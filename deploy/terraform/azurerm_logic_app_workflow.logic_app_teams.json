{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workflows_send_alerts_to_teams_thread_name": {
      "defaultValue": "send_alerts_to_teams_thread-dev",
      "type": "String"
    },
    "virtualmachines_wcus_r2_gen2_externalid": {
      "defaultValue": "/subscriptions/<subscription ID>/resourceGroups/pipelinealertrg/providers/microsoft.compute/virtualmachines/wcus-r2-gen2",
      "type": "String"
    },
    "connections_teams_externalid": {
      "defaultValue": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/connections/teams')]",
      "type": "String"
    },
    "coreChannelParentMessage": {
      "type": "String"
    },
    "ictChannelParentMessage": {
      "type": "String"
    },
    "coreChannelId": {
      "type": "String"
    },
    "ictChannelId": {
      "type": "String"
    },
    "coreTeamId": {
      "type": "String"
    },
    "ictTeamId": {
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('workflows_send_alerts_to_teams_thread_name')]",
      "location": "westeurope",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "data": {
                    "alertContext": {
                      "condition": {
                        "allOf": [
                          {
                            "dimensions": [
                              {
                                "name": "ResourceId",
                                "value": "3efad9dc-3d50-4eac-9c87-8b3fd6f97e4e"
                              }
                            ],
                            "metricName": "Percentage CPU",
                            "metricNamespace": "Microsoft.Compute/virtualMachines",
                            "metricValue": 7.727,
                            "operator": "GreaterThan",
                            "threshold": "25",
                            "timeAggregation": "Average"
                          }
                        ],
                        "windowSize": "PT5M"
                      },
                      "conditionType": "SingleResourceMultipleMetricCriteria",
                      "properties": null
                    },
                    "essentials": {
                      "alertContextVersion": "1.0",
                      "alertId": "/subscriptions/<subscription ID>/providers/Microsoft.AlertsManagement/alerts/b9569717-bc32-442f-add5-83a997729330",
                      "alertRule": "WCUS-R2-Gen2",
                      "alertTargetIDs": [
                        "[parameters('virtualmachines_wcus_r2_gen2_externalid')]"
                      ],
                      "configurationItems": [
                        "wcus-r2-gen2"
                      ],
                      "description": "",
                      "essentialsVersion": "1.0",
                      "firedDateTime": "2019-03-22T13:58:24.3713213Z",
                      "monitorCondition": "Resolved",
                      "monitoringService": "Platform",
                      "originAlertId": "3f2d4487-b0fc-4125-8bd5-7ad17384221e_PipeLineAlertRG_microsoft.insights_metricAlerts_WCUS-R2-Gen2_-117781227",
                      "resolvedDateTime": "2019-03-22T14:03:16.2246313Z",
                      "severity": "Sev3",
                      "signalType": "Metric"
                    }
                  },
                  "schemaId": "azureMonitorCommonAlertSchema"
                }
              }
            }
          },
          "actions": {
            "Switch": {
              "runAfter": {},
              "cases": {
                "Case": {
                  "case": "Platform",
                  "actions": {
                    "For_each": {
                      "foreach": "@triggerBody()?['data']?['alertContext']?['condition']?['allOf']",
                      "actions": {
                        "For_each_2": {
                          "foreach": "@items('For_each')['dimensions']",
                          "actions": {
                            "Reply_with_a_message_in_a_channel": {
                              "runAfter": {},
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "messageBody": "<p><span style=\"font-size: 16px\"><strong>CORE Alert </strong></span><span style=\"font-size: 16px\"><strong>@{triggerBody()?['data']?['essentials']?['severity']}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">Category: Metric<br>\n</span><br>\n@{triggerBody()?['data']?['essentials']?['alertRule']}<br>\n@{triggerBody()?['data']?['essentials']?['description']}<br>\n@{triggerBody()?['data']?['essentials']?['alertId']}<br>\n<br>\n<span style=\"font-size: 14px\"><strong>Metric info<br>\n</strong></span>Namespace @{items('For_each')?['metricNamespace']}<br>\nCondition for Alert: @{items('For_each')?['metricName']} @{items('For_each')?['operator']} @{items('For_each')?['threshold']}<br>\nActual Value: @{items('For_each')?['metricValue']}<br>\n<br>\n<br>\n<span style=\"font-size: 14px\"><strong>Additional Info<br>\n</strong></span>Name: @{items('For_each_2')?['name']}<br>\n<br>\nContext: @{triggerBody()?['data']?['alertContext']}<br>\n<br>\nEssentials: @{triggerBody()?['data']?['essentials']}</p>",
                                  "parentMessageId": "@parameters('coreChannelParentMessage')",
                                  "recipient": {
                                    "channelId": "@parameters('coreTeamId')",
                                    "groupId": "@parameters('coreChannelId')"
                                  }
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['teams']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/v1.0/teams/conversation/replyWithMessage/poster/@{encodeURIComponent('User')}/location/@{encodeURIComponent('Channel')}"
                              }
                            },
                            "Reply_with_a_message_in_a_channel_3": {
                              "runAfter": {
                                "Reply_with_a_message_in_a_channel": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "messageBody": "<p><span style=\"font-size: 16px\"><strong>CORE Alert </strong></span><span style=\"font-size: 16px\"><strong>@{triggerBody()?['data']?['essentials']?['severity']}</strong></span><span style=\"font-size: 16px\"><strong></strong></span><br>\n<span style=\"font-size: 14px\"><strong>Category: Metric</strong></span><br>\n<br>\n@{triggerBody()?['data']?['essentials']?['alertRule']}<br>\n@{triggerBody()?['data']?['essentials']?['description']}<br>\n@{triggerBody()?['data']?['essentials']?['alertId']}<br>\n<br>\n<span style=\"font-size: 14px\"><strong>Metric info</strong></span><br>\nNamespace @{items('For_each')?['metricNamespace']}<br>\nCondition for Alert: @{items('For_each')?['metricName']} @{items('For_each')?['operator']} @{items('For_each')?['threshold']}<br>\nActual Value: @{items('For_each')?['metricValue']}<br>\n<br>\n<br>\n<span style=\"font-size: 14px\"><strong>Additional Info</strong></span><br>\nName: @{items('For_each_2')?['name']}<br>\n<br>\nContext: @{triggerBody()?['data']?['alertContext']}<br>\n<br>\nEssentials: @{triggerBody()?['data']?['essentials']}</p>",
                                  "parentMessageId": "@parameters('ictChannelParentMessage')",
                                  "recipient": {
                                    "channelId": "@parameters('ictTeamId')",
                                    "groupId": "@parameters('ictChannelId')"
                                  }
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['teams']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/v1.0/teams/conversation/replyWithMessage/poster/@{encodeURIComponent('User')}/location/@{encodeURIComponent('Channel')}"
                              }
                            }
                          },
                          "runAfter": {},
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {},
                      "type": "Foreach"
                    }
                  }
                }
              },
              "default": {
                "actions": {
                  "Reply_with_a_message_in_a_channel_2": {
                    "runAfter": {},
                    "type": "ApiConnection",
                    "inputs": {
                      "body": {
                        "messageBody": "<p><span style=\"font-size: 16px\"><strong>CORE Alert </strong></span><span style=\"font-size: 16px\"><strong>@{triggerBody()?['data']?['essentials']?['severity']}</strong></span><span style=\"font-size: 16px\"><strong></strong></span><span><br>\nCategory: </span><span>@{triggerBody()?['data']?['essentials']?['monitoringService']}</span><span><br>\n<br>\n</span><span>@{triggerBody()?['data']?['essentials']?['alertRule']}</span><span><br>\n</span><span>@{triggerBody()?['data']?['essentials']?['description']}</span><span><br>\n</span><span>@{triggerBody()?['data']?['essentials']?['alertId']}</span><span><br>\n<br>\n<br>\n</span><span><strong>Additional Info<br>\n</strong></span><span>Name:<br>\n<br>\nContext: </span><span>@{triggerBody()?['data']?['alertContext']}</span><span><br>\n<br>\nEssentials: </span><span>@{triggerBody()?['data']?['essentials']}</span><span></span></p>",
                        "parentMessageId": "@parameters('coreChannelParentMessage')",
                        "recipient": {
                          "channelId": "@parameters('coreTeamId')",
                          "groupId": "@parameters('coreChannelId')"
                        }
                      },
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['teams']['connectionId']"
                        }
                      },
                      "method": "post",
                      "path": "/v1.0/teams/conversation/replyWithMessage/poster/@{encodeURIComponent('User')}/location/@{encodeURIComponent('Channel')}"
                    }
                  },
                  "Reply_with_a_message_in_a_channel_4": {
                    "runAfter": {
                      "Reply_with_a_message_in_a_channel_2": [
                        "Succeeded"
                      ]
                    },
                    "type": "ApiConnection",
                    "inputs": {
                      "body": {
                        "messageBody": "<p><span style=\"font-size: 16px\"><strong>CORE Alert </strong></span><span style=\"font-size: 16px\"><strong>@{triggerBody()?['data']?['essentials']?['severity']}</strong></span><span style=\"font-size: 16px\"><strong></strong></span><br>\n<span style=\"font-size: 14px\"><strong>Category: </strong></span><span style=\"font-size: 14px\"><strong>@{triggerBody()?['data']?['essentials']?['monitoringService']}</strong></span><span style=\"font-size: 14px\"><strong></strong></span><br>\n<br>\n@{triggerBody()?['data']?['essentials']?['alertRule']}<br>\n@{triggerBody()?['data']?['essentials']?['description']}<br>\n@{triggerBody()?['data']?['essentials']?['alertId']}<br>\n<br>\n<br>\n<span style=\"font-size: 14px\"><strong>Additional Info<br>\n</strong></span>Context: @{triggerBody()?['data']?['alertContext']}<br>\n<br>\nEssentials: @{triggerBody()?['data']?['essentials']}</p>",
                        "parentMessageId": "@parameters('ictChannelParentMessage')",
                        "recipient": {
                          "channelId": "@parameters('ictTeamId')",
                          "groupId": "@parameters('ictChannelId')"
                        }
                      },
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['teams']['connectionId']"
                        }
                      },
                      "method": "post",
                      "path": "/v1.0/teams/conversation/replyWithMessage/poster/@{encodeURIComponent('User')}/location/@{encodeURIComponent('Channel')}"
                    }
                  }
                }
              },
              "expression": "@triggerBody()?['data']?['essentials']?['monitoringService']",
              "type": "Switch"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "teams": {
                "connectionId": "[parameters('connections_teams_externalid')]",
                "connectionName": "teams",
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/teams')]"
              }
            }
          }
        }
      }
    }
  ]
}