{
  "definition": {
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "actions": {
      "Switch": {
        "cases": {
          "Case": {
            "actions": {
              "For_each": {
                "actions": {
                  "For_each_2": {
                    "actions": {
                      "Post_message_in_a_chat_or_channel": {
                        "inputs": {
                          "body": {
                            "messageBody": "<p><span style=\"font-size: 16px\"><strong>CORE DEV Alert<br>\n</strong></span><span style=\"font-size: 14px\">Category: Metric<br>\n</span><br>\n<span style=\"color: rgb(209,72,65)\">Severity: </span><span style=\"color: rgb(209,72,65)\">@{triggerBody()?['data']?['essentials']?['severity']}</span><span style=\"color: rgb(209,72,65)\"></span><br>\n<br>\n@{triggerBody()?['data']?['essentials']?['alertRule']}<br>\n@{triggerBody()?['data']?['essentials']?['description']}<br>\n@{triggerBody()?['data']?['essentials']?['alertId']}<br>\n<br>\n<span style=\"font-size: 14px\"><strong>Metric info<br>\n</strong></span>Namespace @{items('For_each')?['metricNamespace']}<br>\nCondition for Alert: @{items('For_each')?['metricName']} @{items('For_each')?['operator']} @{items('For_each')?['threshold']}<br>\nActual Value: @{items('For_each')?['metricValue']}<br>\n<br>\n<br>\n<span style=\"font-size: 14px\"><strong>Additional Info<br>\n</strong></span><span style=\"font-size: 12px\">Name: </span><span style=\"font-size: 12px\">@{items('For_each_2')?['name']}</span><span style=\"font-size: 12px\"></span><br>\n<br>\nContext: @{triggerBody()?['data']?['alertContext']}<br>\n<br>\nEssentials: @{triggerBody()?['data']?['essentials']}</p>",
                            "recipient": {
                              "channelId": "variables(api_connection_teams_channel_id)",
                              "groupId": "variables(api_connection_teams_group_id)"
                            }
                          },
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['teams']['connectionId']"
                            }
                          },
                          "method": "post",
                          "path": "/beta/teams/conversation/message/poster/Flow bot/location/@{encodeURIComponent('Channel')}"
                        },
                        "runAfter": {},
                        "type": "ApiConnection"
                      }
                    },
                    "foreach": "@items('For_each')['dimensions']",
                    "runAfter": {},
                    "type": "Foreach"
                  }
                },
                "foreach": "@triggerBody()?['data']?['alertContext']?['condition']?['allOf']",
                "runAfter": {},
                "type": "Foreach"
              }
            },
            "case": "Platform"
          }
        },
        "default": {
          "actions": {
            "Post_message_in_a_chat_or_channel_6": {
              "inputs": {
                "body": {
                  "messageBody": "<p><span style=\"font-size: 16px\"><strong>CORE DEV Alert<br>\n</strong></span><span style=\"font-size: 14px\">Category: </span><span style=\"font-size: 14px\">@{triggerBody()?['data']?['essentials']?['monitoringService']}</span><span style=\"font-size: 14px\"> - </span><span style=\"font-size: 14px\">@{triggerBody()?['data']?['essentials']?['signalType']}</span><span style=\"font-size: 14px\"><br>\n</span><br>\n<span style=\"color: rgb(209,72,65)\">Severity </span><span style=\"color: rgb(209,72,65)\">@{triggerBody()?['data']?['essentials']?['severity']}</span><span style=\"color: rgb(209,72,65)\"></span><br>\n<br>\n@{triggerBody()?['data']?['essentials']?['alertRule']}<br>\n@{triggerBody()?['data']?['essentials']?['description']}<br>\n@{triggerBody()?['data']?['essentials']?['alertId']}<br>\n<br>\n<span style=\"font-size: 14px\">Context<br>\n</span><br>\n@{triggerBody()?['data']?['alertContext']}<br>\n<br>\n<span style=\"font-size: 14px\">Essentials<br>\n</span><br>\n@{triggerBody()?['data']?['essentials']}<br>\n</p>",
                  "recipient": {
                    "channelId": "variables(api_connection_teams_channel_id)",
                    "groupId": "variables(api_connection_teams_group_id)"
                  }
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['teams']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/beta/teams/conversation/message/poster/Flow bot/location/@{encodeURIComponent('Channel')}"
              },
              "runAfter": {},
              "type": "ApiConnection"
            }
          }
        },
        "expression": "@triggerBody()?['data']?['essentials']?['monitoringService']",
        "runAfter": {},
        "type": "Switch"
      }
    },
    "contentVersion": "1.0.0.0",
    "outputs": {},
    "parameters": {
      "$connections": {
        "defaultValue": {},
        "type": "Object"
      }
    },
    "triggers": {
      "manual": {
        "inputs": {
          "schema": {
            "properties": {
              "data": {
                "properties": {
                  "alertContext": {
                    "properties": {
                      "condition": {
                        "properties": {
                          "allOf": {
                            "items": {
                              "properties": {
                                "dimensions": {
                                  "items": {
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "metricName": {
                                  "type": "string"
                                },
                                "metricNamespace": {
                                  "type": "string"
                                },
                                "metricValue": {
                                  "type": "number"
                                },
                                "operator": {
                                  "type": "string"
                                },
                                "threshold": {
                                  "type": "string"
                                },
                                "timeAggregation": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "metricName",
                                "metricNamespace",
                                "operator",
                                "threshold",
                                "timeAggregation",
                                "dimensions",
                                "metricValue"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "windowSize": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "conditionType": {
                        "type": "string"
                      },
                      "properties": {}
                    },
                    "type": "object"
                  },
                  "essentials": {
                    "properties": {
                      "alertContextVersion": {
                        "type": "string"
                      },
                      "alertId": {
                        "type": "string"
                      },
                      "alertRule": {
                        "type": "string"
                      },
                      "alertTargetIDs": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "configurationItems": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "description": {
                        "type": "string"
                      },
                      "essentialsVersion": {
                        "type": "string"
                      },
                      "firedDateTime": {
                        "type": "string"
                      },
                      "monitorCondition": {
                        "type": "string"
                      },
                      "monitoringService": {
                        "type": "string"
                      },
                      "originAlertId": {
                        "type": "string"
                      },
                      "resolvedDateTime": {
                        "type": "string"
                      },
                      "severity": {
                        "type": "string"
                      },
                      "signalType": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "schemaId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "kind": "Http",
        "type": "Request"
      }
    }
  },
  "parameters": {
    "$connections": {
      "value": {
        "teams": {
          "connectionId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/rg-core-dev/providers/Microsoft.Web/connections/teams']",
          "connectionName": "teams",
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/westeurope/managedApis/teams']"
        }
      }
    }
  }
}