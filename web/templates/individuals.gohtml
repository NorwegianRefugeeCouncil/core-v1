{{define "head"}}
    <script type="application/javascript" src="/static/autocomplete.js"></script>
    <script type="application/javascript" src="/static/rxjs.js"></script>
    <script type="application/javascript" src="/static/country_selector.js"></script>
    <script type="application/javascript">

        const uploadIndividualFileInputId = "individual-upload--file"
        const uploadIndividualFileButtonId = "individual-upload--button"
        const uploadIndividualFileFormId = "individual-upload--form"
        const individualActionFormId = "individuals-action-form"
        const deleteIndividualsButtonId = "deleteIndividualsButton"
        const deleteIndividualsButtonContentId = "deleteIndividualsButtonContent"
        const searchFormId = "searchForm"
        const selectIndividualCheckboxClass = "select-row-checkbox"
        const selectAllIndividualsCheckboxId = "selectAllCheckbox"
        const selectedRowAttributes = {"aria-selected": "true"}
        const selectedRowClasses = ["table-active"]
        const dataIndividualIdAttribute = "data-individual-id"
        const activeDeleteButtonClasses = ["btn-danger"]
        const inactiveDeleteButtonClasses = ["btn-outline-secondary", "disabled"]
        const inactiveDeleteButtonText = "Delete individuals"
        const deleteIndividualsConfirmationModalId = "deleteIndividualsConfirmationModal"
        const deleteIndividualsConfirmationModalContentId = "deleteIndividualsConfirmationModalContent"
        const deleteIndividualsConfirmationModalConfirmButtonId = "deleteIndividualsConfirmationModalConfirmButton"


        /**
         * Gets the number of selected individuals.
         * @returns {number}
         */
        function getSelectedIndividualCount() {
            return Array.from(document.getElementsByClassName(selectIndividualCheckboxClass))
                .filter(checkbox => checkbox.checked)
                .length
        }

        /**
         * Gets the text for the delete button based on the number of selected individuals.
         * @param count The number of selected individuals.
         * @returns {string} The text for the delete button.
         */
        function getDeleteButtonText(count) {
            if (count === 0) {
                return inactiveDeleteButtonText
            } else {
                return "Delete " + count + " individual" + (count > 1 ? "s" : "")
            }
        }

        /**
         * Gets the row id for the given individual id.
         * @param individualId The individual id.
         * @returns {string} The row id.
         */
        function getRowIdForIndividualId(individualId) {
            return "individual-row-" + individualId;
        }

        /**
         * Gets the checkbox id for the given individual id.
         * @param individualId The individual id.
         * @returns {string} The checkbox id.
         */
        function getSelectCheckboxIdForIndividualId(individualId) {
            return "individual-checkbox-" + individualId;
        }

        /**
         * opens the upload modal
         */
        function openUploadDialog() {
            document.getElementById(uploadIndividualFileInputId).click();
        }

        /**
         * Opens the individual deletion confirmation modal
         */
        function refreshDeleteConfirmationModal() {
            const count = getSelectedIndividualCount()
            const modalContent = document.getElementById(deleteIndividualsConfirmationModalContentId)
            const confirmButton = document.getElementById(deleteIndividualsConfirmationModalConfirmButtonId)
            modalContent.innerHTML = "Are you sure you want to delete " + count + " individual" + (count > 1 ? "s" : "") + "?"
            confirmButton.innerText = "Delete " + count + " individual" + (count > 1 ? "s" : "")
        }

        /**
         * submits the upload form
         */
        function submitUploadForm() {
            document.getElementById(uploadIndividualFileButtonId).disabled = true;
            document.getElementById(uploadIndividualFileFormId).submit();
        }

        /**
         * submits the action for the selected individuals
         * @param {string} action
         */
        function submitActionForm(action) {
            const form = document.getElementById(individualActionFormId);
            form.action = "/countries/{{.Options.CountryID}}/individuals/" + action;
            form.submit();
        }

        /**
         * returns the id of the individual associated with the given checkbox
         * @param checkbox
         * @returns string
         */
        function getIndividualIdFromSelectCheckbox(checkbox) {
            const row = checkbox.closest('tr');
            return row.getAttribute(dataIndividualIdAttribute)
        }


        document.addEventListener("DOMContentLoaded", function () {

            const searchForm = document.getElementById(searchFormId)
            const uploadButton = document.getElementById(uploadIndividualFileButtonId)
            const deleteButton = document.getElementById(deleteIndividualsButtonId)
            const deleteButtonContent = document.getElementById(deleteIndividualsButtonContentId)
            const uploadFileInput = document.getElementById(uploadIndividualFileInputId)
            const selectCheckboxes = Array.from(document.getElementsByClassName(selectIndividualCheckboxClass))
            const selectAllCheckbox = document.getElementById(selectAllIndividualsCheckboxId);

            uploadButton.addEventListener('click', openUploadDialog);
            uploadFileInput.addEventListener('change', submitUploadForm);

            /**
             * Refreshes the disabled state of the delete button as well as the text of the button
             */
            function refreshDeleteButton() {
                const checkedCount = getSelectedIndividualCount()
                deleteButtonContent.innerText = getDeleteButtonText(checkedCount);
                if (checkedCount > 0) {
                    // button is active
                    for (const className of inactiveDeleteButtonClasses) {
                        deleteButton.classList.remove(className)
                    }
                    for (const className of activeDeleteButtonClasses) {
                        deleteButton.classList.add(className)
                    }
                } else {
                    // button is inactive
                    for (const className of activeDeleteButtonClasses) {
                        deleteButton.classList.remove(className)
                    }
                    for (const className of inactiveDeleteButtonClasses) {
                        deleteButton.classList.add(className)
                    }
                }
            }

            /**
             * Refreshes the style of the selected rows
             * @param {string} id of the individual
             */
            function refreshIndividualRow(id) {
                const row = document.getElementById(getRowIdForIndividualId(id));
                const checkbox = document.getElementById(getSelectCheckboxIdForIndividualId(id));
                if (checkbox.checked) {
                    // row is selected
                    for (const activeAttribute in selectedRowAttributes) {
                        row.setAttribute(activeAttribute, selectedRowAttributes[activeAttribute])
                    }
                    for (const activeClass of selectedRowClasses) {
                        row.classList.add(activeClass)
                    }
                } else {
                    // row is not selected
                    for (const activeAttribute in selectedRowAttributes) {
                        row.removeAttribute(activeAttribute)
                    }
                    for (const activeClass of selectedRowClasses) {
                        row.classList.remove(activeClass)
                    }
                }
            }

            /**
             * Refreshes the style of the select all checkbox
             */
            function refreshSelectAllCheckbox() {
                // update the select all checkbox
                const allChecked = selectCheckboxes.every(checkbox => checkbox.checked);
                const someChecked = selectCheckboxes.some(checkbox => checkbox.checked);
                selectAllCheckbox.checked = allChecked && someChecked
                selectAllCheckbox.indeterminate = someChecked && !allChecked
            }

            // Disable sending empty parameters to the search endpoint.
            // Otherwise, the URL would be huge with all the default query
            // parameters included.
            searchForm.onsubmit = function () {
                let inputs, index;
                inputs = [
                    ...document.getElementsByTagName('input'),
                    ...document.getElementsByTagName('select'),
                ];
                for (index = 0; index < inputs.length; ++index) {
                    if (!searchForm.contains(inputs[index])) {
                        continue
                    }
                    if (inputs[index].value === "") {
                        inputs[index].disabled = true;
                    }
                }
            }

            // Handles the change of the select all checkbox
            // Checks or unchecks all checkboxes when the select all checkbox is clicked
            selectAllCheckbox.addEventListener("change", function (event) {
                const isChecked = event.target.checked;
                for (let i = 0; i < selectCheckboxes.length; i++) {
                    selectCheckboxes[i].checked = isChecked
                    refreshIndividualRow(getIndividualIdFromSelectCheckbox(selectCheckboxes[i]))
                }
                refreshDeleteButton()
                refreshSelectAllCheckbox()
            });

            // Handles the change of a single individual select checkbox
            // Selects or unselects a single row
            for (const selectCheckbox of selectCheckboxes) {
                selectCheckbox.addEventListener("change", function (event) {
                    refreshIndividualRow(getIndividualIdFromSelectCheckbox(event.target))
                    refreshSelectAllCheckbox()
                    refreshDeleteButton()
                })
            }

            // Refresh the text and style of the delete button when the page is loaded
            refreshDeleteButton()

        });
    </script>
{{end}}
{{define "body"}}
    <header class="sticky-top">
        {{template "nav" .}}
    </header>
    <main style="">
        <div class="container-fluid pt-3">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="my-4">{{ $.RequestContext.SelectedCountry.Name }}</h1>

                <div class="d-flex justify-content-end align-items-center">
                    {{ if or (.RequestContext.Auth.IsGlobalAdmin) (.RequestContext.Auth.HasCountryLevelPermission .RequestContext.SelectedCountryID 1)}}
                        <button type="button"
                                id="deleteIndividualsButton"
                                style="width: 20rem"
                                class="btn disabled btn-outline-secondary me-2 individual-action-button"
                                data-bs-toggle="modal"
                                data-bs-target="#deleteIndividualsConfirmationModal"
                                onclick="refreshDeleteConfirmationModal()">
                            <i class="bi bi-trash"></i>
                            <span id="deleteIndividualsButtonContent">Delete individuals</span>
                        </button>
                        <a href="/countries/{{.Options.CountryID}}/individuals/new"
                           class="btn btn-outline-primary me-2">
                            Create new Individual
                        </a>
                    {{end}}
                    <a href="/countries/{{.Options.CountryID}}/individuals/download" target="_blank"
                       class="btn btn-outline-primary">
                        Download
                    </a>
                    {{ if or (.RequestContext.Auth.IsGlobalAdmin) (.RequestContext.Auth.HasCountryLevelPermission .RequestContext.SelectedCountryID 1)}}
                        <form id="individual-upload--form" action="/countries/{{.Options.CountryID}}/individuals/upload"
                              enctype="multipart/form-data" method="post" class="ms-2">
                            <input
                                    hidden
                                    id="individual-upload--file"
                                    name="file"
                                    type="file"
                                    class="form-control"
                                    accept="text/csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                            >
                            <button id="individual-upload--button" type="button" class="btn btn-outline-primary">
                                Upload
                            </button>
                        </form>
                    {{end}}
                </div>
            </div>

            <!-- SEARCH FILTERS -->
            <div class="card mb-3">
                <div class="card-header" id="searchFormAccordion">
                    <button class="btn btn-link d-flex w-100 justify-content-between px-0 no-text-decoration"
                            data-bs-toggle="collapse" data-bs-target="#search-form" aria-expanded="true"
                            aria-controls="search-form">
                        Filter
                        <i class="bi-caret-down-fill" title="NavbarToggle"></i>
                    </button>
                </div>
                <div id="search-form" class="collapse nrc-accordion-body" aria-labelledby="searchFormAccordion">
                    <form method="get" action="/countries/{{.Options.CountryID}}/individuals" id="searchForm">
                        <div class="card-body">
                            <input type="hidden" name="take" value="">
                            <input type="hidden" name="skip" value="">

                            <div class="row">
                                <!-- ID -->
                                <div class="form-group mb-3 col-6">
                                    <label class="form-label" for="ID">IDs</label>
                                    <input id="ID"
                                           name="id"
                                           type="text"
                                           placeholder="Search by ID"
                                           class="form-control"
                                           value="{{if not .Options.IDs.IsEmpty }}{{joinStrings .Options.IDs.Items ","}}{{end}}">
                                </div>
                                <!-- End ID -->

                                <!-- Full Name -->
                                <div class="form-group mb-3 col-6">
                                    <label class="form-label" for="Name">Name</label>
                                    <input id="Name"
                                           name="full_name"
                                           type="text"
                                           placeholder="Search by name"
                                           class="form-control"
                                           value="{{.Options.FullName}}">
                                </div>
                                <!-- End Full Name -->
                            </div>

                            <div class="row">
                                <!-- Is Minor -->
                                <div class="form-group col-6">
                                    <label class="form-text">Is Minor</label>
                                    <div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" value="" id="IsMinorAll"
                                                   name="is_minor"
                                                   {{if eq .Options.IsMinor nil }}checked="checked"{{end}}>
                                            <label class="form-check-label" for="IsMinorAll">
                                                All
                                            </label>
                                        </div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" value="true" id="IsMinorYes"
                                                   name="is_minor"
                                                   {{if .Options.IsMinorSelected }}checked="checked"{{end}}>
                                            <label class="form-check-label" for="IsMinorYes">
                                                Yes
                                            </label>
                                        </div>
                                        <div class="form-check form-check-inline mb-3">
                                            <input class="form-check-input" type="radio" value="false" id="IsMinorNo"
                                                   name="is_minor"
                                                   {{if .Options.IsNotMinorSelected }}checked="checked"{{end}}>
                                            <label class="form-check-label" for="IsMinorNo">
                                                No
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <!-- End Is Minor -->

                                <!-- Protection Concerns -->
                                <div class="form-group col-6">
                                    <label class="form-text">Presents Protection Concerns</label>
                                    <div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" value=""
                                                   id="PresentsProtectionConcernsAll"
                                                   name="presents_protection_concerns"
                                                   {{if eq .Options.PresentsProtectionConcerns nil }}checked="checked"{{end}}>
                                            <label class="form-check-label" for="PresentsProtectionConcernsAll">
                                                All
                                            </label>
                                        </div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" value="true"
                                                   id="PresentsProtectionConcernsYes"
                                                   name="presents_protection_concerns"
                                                   {{if .Options.IsPresentsProtectionConcernsSelected }}checked="checked"{{end}}>
                                            <label class="form-check-label" for="PresentsProtectionConcernsYes">
                                                Yes
                                            </label>
                                        </div>
                                        <div class="form-check form-check-inline mb-3">
                                            <input class="form-check-input" type="radio" value="false"
                                                   id="PresentsProtectionConcernsNo"
                                                   name="presents_protection_concerns"
                                                   {{if .Options.IsNotPresentsProtectionConcernsSelected }}checked="checked"{{end}}>
                                            <label class="form-check-label" for="PresentsProtectionConcernsNo">
                                                No
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <!-- End Protection Concerns -->

                                <!-- Gender -->
                                <div class="form-group col-6">
                                    <label class="form-text">Gender</label>
                                    <div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" value="" id="GenderAll"
                                                   name="gender"
                                                   {{if .Options.Genders.IsEmpty }}checked="checked"{{end}}>
                                            <label class="form-check-label" for="GenderAll">
                                                All
                                            </label>
                                        </div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" value="male" id="GenderMale"
                                                   name="gender"
                                                   {{if .Options.Genders.Contains "male"}}checked="checked"{{end}}>
                                            <label class="form-check-label" for="GenderMale">
                                                Male
                                            </label>
                                        </div>
                                        <div class="form-check form-check-inline mb-3">
                                            <input class="form-check-input" type="radio" value="female"
                                                   id="GenderFemale"
                                                   name="gender"
                                                   {{if .Options.Genders.Contains "female"}}checked="checked"{{end}}>
                                            <label class="form-check-label" for="GenderFemale">
                                                Female
                                            </label>
                                        </div>
                                        <div class="form-check form-check-inline mb-3">
                                            <input class="form-check-input" type="radio" value="prefers_not_to_say"
                                                   id="GenderPrefersNotToSay"
                                                   name="gender"
                                                   {{if .Options.Genders.Contains "prefers_not_to_say"}}checked="checked"{{end}}>
                                            <label class="form-check-label" for="GenderPrefersNotToSay">
                                                Prefers not to say
                                            </label>
                                        </div>
                                        <div class="form-check form-check-inline mb-3">
                                            <input class="form-check-input" type="radio" value="other" id="GenderOther"
                                                   name="gender"
                                                   {{if .Options.Genders.Contains "other"}}checked="checked"{{end}}>
                                            <label class="form-check-label" for="GenderOther">
                                                Other
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <!-- End Gender -->
                            </div>

                            <div class="row">
                                <!-- Displacement Status -->
                                <div class="col-6">
                                    <label class="form-label" for="DisplacementStatus">Displacement Status</label>
                                    <select id="DisplacementStatus" name="displacement_status" class="form-control">
                                        <option value="" {{if .Options.DisplacementStatuses.IsEmpty }}selected{{end}}>

                                        </option>
                                        <option value="idp"
                                                {{if .Options.DisplacementStatuses.Contains "idp" }}selected{{end}}>
                                            Internally Displaced Person
                                        </option>
                                        <option value="refugee"
                                                {{if .Options.DisplacementStatuses.Contains "refugee" }}selected{{end}}>
                                            Refugee
                                        </option>
                                        <option value="host_community"
                                                {{if .Options.DisplacementStatuses.Contains "host_community" }}selected{{end}}>
                                            Host Community
                                        </option>
                                    </select>
                                </div>
                                <!-- End Displacement Status -->

                                <!-- Address -->
                                <div class="form-group mb-3 col-6">
                                    <label class="form-label" for="Address">Address</label>
                                    <input id="Address"
                                           name="address"
                                           type="text"
                                           class="form-control"
                                           placeholder="Search by address"
                                           value="{{.Options.Address}}">
                                </div>
                                <!-- End Address -->
                            </div>

                            <div class="row">
                                <!-- Email -->
                                <div class="form-group mb-3 col-6">
                                    <label class="form-label" for="Email">Email</label>
                                    <input id="Email"
                                           name="email"
                                           type="text"
                                           class="form-control"
                                           placeholder="Search by email"
                                           value="{{.Options.Email}}">
                                </div>
                                <!-- End Email -->

                                <!-- Phone -->
                                <div class="form-group mb-3 col-6">
                                    <label class="form-label" for="PhoneNumber">Phone Number</label>
                                    <input id="PhoneNumber"
                                           name="phone_number"
                                           type="text"
                                           class="form-control"
                                           placeholder="Search by phone number"
                                           value="{{.Options.PhoneNumber}}">
                                </div>
                                <!-- End Phone -->
                            </div>

                            <!-- Age -->
                            <div class="col-6">
                                <label class="form-label">Age</label>
                                <div class="row">
                                    <div class="col-3 input-group mb-2 w-50">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text">From</div>
                                        </div>
                                        <input type="number" name="age_from" class="form-control" id="AgeFrom"
                                               value="{{if not (eq .Options.AgeFrom 0)}}{{.Options.AgeFrom}}{{end}}">
                                    </div>

                                    <div class="col-3 input-group mb-2 w-50">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text">To</div>
                                        </div>
                                        <input type="number" name="age_to" class="form-control" id="AgeTo"
                                               value="{{if not (eq .Options.AgeTo 0)}}{{.Options.AgeTo}}{{end}}">
                                    </div>
                                </div>
                                <!-- End Age -->
                            </div>
                        </div>
                    </form>
                    <div class="card-footer">
                        <a href="/countries/{{.Options.CountryID}}/individuals"
                           class="btn btn-outline-primary">Clear</a>
                        <button class="btn btn-primary" type="submit" form="searchForm">Search</button>
                    </div>
                </div>
            </div>
            <!-- END SEARCH FILTERS -->

            <!-- INDIVIDUALS TABLE -->
            <form id="individuals-action-form" class="table-responsive mb-3" method="post">
                <table class="table table-individuals">
                    <thead>
                    <tr>
                        <th class="sticky-column" style="width:2rem">
                            <input class="form-check-input" type="checkbox" id="selectAllCheckbox"/>
                        </th>
                        {{template "columnHeader" (dict "Width" "18rem" "Label" "ID" "Scope" "col" "Class" "sticky-column" "Title" "ID" "Style" "left: 3.85rem")}}
                        {{template "columnHeader" (dict "Width" "10rem" "Label" "Name" "Scope" "col" "Class" "sticky-column border-end"  "Style" "left: 23.62rem" "Title" "Full Name")}}
                        {{template "columnHeader" (dict "Width" "6rem" "Label" "Gender" "Title" "Gender" )}}
                        {{template "columnHeader" (dict "Width" "4rem" "Label" "Age" "Scope" "col" "Title" "Age")}}
                        {{template "columnHeader" (dict "Width" "12rem" "Label" "Household ID" "Title" "Household ID")}}
                        {{template "columnHeader" (dict "Width" "4rem" "Label" "HoH" "Title" "Head of Household" "Class" "text-center")}}
                        {{template "columnHeader" (dict "Width" "12rem" "Label" "Community ID" "Title" "Community ID" )}}
                        {{template "columnHeader" (dict "Width" "4rem" "Label" "CR" "Title" "Community Representative" "Class" "text-center")}}
                        {{template "columnHeader" (dict "Width" "12rem" "Label" "Phone Number" "Title" "Phone Number")}}
                        {{template "columnHeader" (dict "Width" "12rem" "Label" "Email" "Title" "Email Address" )}}
                        {{template "columnHeader" (dict "Width" "12rem" "Label" "Registration Date" "Title" "Registration Date" )}}
                        {{template "columnHeader" (dict "Width" "12rem" "Label" "Area1" "Title" "Collection Administrative Area 1" )}}
                        {{template "columnHeader" (dict "Width" "12rem" "Label" "Area2" "Title" "Collection Administrative Area 2" )}}
                        {{template "columnHeader" (dict "Width" "12rem" "Label" "Area3" "Title" "Collection Administrative Area 3" )}}
                        {{template "columnHeader" (dict "Width" "10rem" "Label" "Created" "Title" "Date Created")}}
                        {{template "columnHeader" (dict "Width" "10rem" "Label" "Updated" "Title" "Date Updated")}}

                        <th><!--filler--></th>
                    </tr>
                    </thead>
                    <tbody>
                    {{ if .Individuals }}
                        {{range .Individuals}}
                            <tr aria-selected="false" id="individual-row-{{.ID}}" class="individual-row"
                                data-individual-id="{{.ID}}">
                                <td class="sticky-column">
                                    <input class="form-check-input select-row-checkbox"
                                           type="checkbox"
                                           id="individual-checkbox-{{.ID}}"
                                           value="{{.ID}}"
                                           name="individual_id"/>
                                </td>
                                <td class="sticky-column" style="left: 2rem">
                                    <a href="/countries/{{.CountryID}}/individuals/{{.ID}}">
                                        {{.ID}}
                                    </a>
                                </td>
                                <td class="sticky-column border-end" style="left: 21.75rem">
                                    {{if .FullName}}
                                        {{.FullName}}
                                    {{else}}
                                        <span class="text-muted"><em>anonymous</em></span>
                                    {{end}}
                                </td>
                                <td>
                                    {{.Gender}}
                                </td>
                                <td>
                                    {{if .BirthDate}}
                                        <span title="{{.BirthDate.Format "2006-01-02"}}">{{age .BirthDate}}</span>
                                    {{end}}
                                </td>
                                <td>
                                    {{.HouseholdID}}
                                </td>
                                <td class="text-center">
                                    {{if .IsHeadOfHousehold}}
                                        <input class="form-check-input marker-only"
                                               type="checkbox"
                                               checked="checked"
                                               disabled="disabled"/>
                                    {{end}}
                                </td>
                                <td>
                                    {{.CommunityID}}
                                </td>
                                <td class="text-center">
                                    {{if .IsHeadOfCommunity}}
                                        <input class="form-check-input marker-only"
                                               type="checkbox"
                                               checked="checked"
                                               disabled="disabled">
                                    {{end}}
                                </td>
                                <td>
                                    {{if .PhoneNumber}}
                                        <a class="font-monospace"
                                           href="tel:{{.PhoneNumber}}">{{.PhoneNumber}}</a>
                                    {{end}}
                                </td>
                                <td>
                                    {{if .Email}}
                                        <a href="mailto:{{.Email}}">{{.Email}}</a>
                                    {{end}}
                                </td>
                                <td>
                                    {{if .CollectionTime}}
                                        {{.CollectionTime.Format "2006-01-02"}}
                                    {{end}}
                                </td>
                                <td>
                                    {{.CollectionAdministrativeArea1}}
                                </td>
                                <td>
                                    {{.CollectionAdministrativeArea2}}
                                </td>
                                <td>
                                    {{.CollectionAdministrativeArea3}}
                                </td>
                                <td>
                                    {{.CreatedAt.Format "2006-01-02 15:04:05"}}
                                </td>
                                <td>
                                    {{.UpdatedAt.Format "2006-01-02 15:04:05"}}
                                </td>

                            </tr>
                        {{end}}
                    {{else}}
                        <tr>
                            <td>No individuals found</td>
                        </tr>
                    {{end}}
                    </tbody>
                </table>
            </form>
            <!-- END INDIVIDUALS TABLE -->

            <!-- PAGE FOOTER -->
            <div class="d-flex align-items-start justify-content-end mb-5">
                <div class="d-flex align-items-center">
                    Results:
                    <nav aria-label="pick amount of results" class="ms-2">
                        <ul class="pagination mb-0">
                            <li class="page-item {{if eq .Options.Take 20}}active{{end}}">
                                <a href="{{(.Options.WithTake 20).QueryParams}}" class="page-link">20</a>
                            </li>
                            <li class="page-item {{if eq .Options.Take 50}}active{{end}}">
                                <a href="{{(.Options.WithTake 50).QueryParams}}" class="page-link">50</a>
                            </li>
                            <li class="page-item {{if eq .Options.Take 100}}active{{end}}">
                                <a href="{{(.Options.WithTake 100).QueryParams}}" class="page-link">100</a>
                            </li>
                        </ul>
                    </nav>
                </div>
                <div class="ms-3">
                    <nav aria-label="Page navigation">
                        <ul class="pagination">
                            <li class="page-item {{if eq 0 .Options.Skip}}disabled{{end}}">
                                <a class="page-link" href="{{.Options.FirstPage.QueryParams}}">First</a>
                            </li>
                            <li class="page-item {{if eq 0 .Options.Skip}}disabled{{end}}">
                                <a class="page-link"
                                   href="{{.Options.PreviousPage.QueryParams}}">Previous</a>
                            </li>
                            <li class="page-item {{if lt (len .Individuals) .Options.Take}}disabled{{end}}">
                                <a class="page-link"
                                   href="{{.Options.NextPage.QueryParams}}">Next</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
            <!-- END PAGE FOOTER -->
        </div>
    </main>

    <div class="modal" tabindex="-1" id="deleteIndividualsConfirmationModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Delete Individuals</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p id="deleteIndividualsConfirmationModalContent">
                        <!-- Content is filled in by JavaScript -->
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button"
                            class="btn btn-danger"
                            id="deleteIndividualsConfirmationModalConfirmButton"
                            onclick="submitActionForm('delete')">
                        <!-- Content is filled in by JavaScript -->
                    </button>
                </div>
            </div>
        </div>
    </div>


{{end}}

{{define "columnHeader"}}
    {{$label := .Label}}
    {{$width := .Width}}
    {{$minWidth := .MinWidth}}
    {{$maxWidth := .MaxWidth}}


    {{$style := "style=\""}}
    {{if .Style}}{{$style = concat $style .Style}}{{end}}
    {{$style = concat $style ";" }}
    {{if $width}}
        {{$style = concat $style "width: " $width ";" }}
    {{end}}
    {{if $minWidth}}
        {{$style = concat $style "min-width: " $minWidth ";" }}
    {{end}}
    {{if $maxWidth}}
        {{$style = concat $style "max-width: " $maxWidth ";" }}
    {{end}}
    {{$style = concat $style "\"" }}

    <th {{$style | attr}}
            class="{{.Class}}"
            {{if .Scope}}scope="{{.Scope}}"{{end}}
            {{if .Title}}title="{{.Title}}"{{end}}
    >
        {{$label}}
    </th>

{{end}}